[project]
authors = [{name="Xavier DuprÃ©", email="xavier.dupre@gmail.com"}]
classifiers = [
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: C",
    "Programming Language :: Python",
    "Topic :: Software Development",
    "Topic :: Scientific/Engineering",
    "Development Status :: 5 - Production/Stable",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = ["numpy", "scipy"]
description = "Teaching materials, python and C++"
keywords = ["CUDA", "openmp", "cmake", "cython", "pybind11"]
license = {file = "LICENSE.txt"}
name = "teachcompute"
readme = "README.rst"
requires-python = ">=3.9"
version = "0.2.0"

[project.urls]
Homepage = "https://sdpython.github.io/doc/teachcompute/dev/"
Documentation = "https://sdpython.github.io/doc/teachcompute/dev/"
Repository = "https://github.com/sdpython/teachcompute/"
Changelog = "https://github.com/sdpython/teachcompute/blob/main/CHANGELOGS.rst"
Issues = "https://github.com/sdpython/teachcompute/issues"

[project.optional-dependencies]
dev = [
    "autopep8",
    "black",
    "clang-format",
    "cmakelang",
    "coverage",
    "cython",
    "cython-lint",
    "flake8",
    "furo",
    "isort",
    "joblib",
    "lightgbm",
    "matplotlib",
    "ml-dtypes",
    "pandas",
    "psutil",
    "pytest",
    "pytest-cov",
    "ruff",
    "scikit-learn",
    "sphinx",
    "sphinx-gallery",
    "sphinx-issues",
    "torch",
    "tqdm",
    "wheel",
    "xgboost",
]

[build-system]
requires = [
    "abi3audit; sys_platform == 'linux'",
    "auditwheel-symbols; sys_platform == 'linux'",
    "build",
    "Cython",
    "cmake",
    "numpy",
    "pybind11",
    "scipy",
    "setuptools; python_version < 3.13",
    "torch",
    "wheel",
]

[tool.rstcheck]
report_level = "INFO"
ignore_directives = [
    "autosignature",
    "autoclass",
    "autofunction",
    "automodule",
    "blockdiag",
    "blogpost",
    "blogpostagg",
    "exref",
    "exreflist",
    "faqref",
    "faqreflist",
    "gdot",
    "image-sg",
    "inheritance-diagram",
    "mathdef",
    "mathdeflist",
    "nbgallery",
    "nblinkgallery",
    "plot",
    "pr",
    "runpython",
    "tocdelay",
]
ignore_roles = ["epkg", "githublink", "issue"]
ignore_messages = [
    ".*Hyperlink target .* is not referenced.*",
    ".*Document or section may not begin with a transition.*",
    ".*Unknown target name: .*[0-9]{4}.*",
    ".*Duplicate explicit target name: .pdf..*",
    ".*Unexpected possible title overline or transition..*",
]

[tool.setuptools.packages.find]
namespaces = false

[tool.setuptools.package-data]
"*" = ["*.cc", "*.cpp", "*.cu", "*.cuh", "*.dll", "*.dylib", "*.h", "*.hpp", "*.pyd", "*.so*"]

[tool.cibuildwheel]
build = "*"
manylinux-x86_64-image = "manylinux2014"
test-command = "python -c \"import teachcompute;teachcompute.check_installation(val=True)\""

[tool.cibuildwheel.linux]
archs = ["x86_64"]
build = "cp*"
skip = "cp36-* cp37-* cp38-* cp39-* cp312-* pypy* *musllinux*"
manylinux-x86_64-image = "manylinux2014"
before-build = "pip install auditwheel-symbols abi3audit"
build-verbosity = 1
repair-wheel-command = "auditwheel-symbols --manylinux 2014 {wheel} ; abi3audit {wheel} ; auditwheel repair -w {dest_dir} {wheel} || exit 0"
test-command = "python -c \"import teachcompute;teachcompute.check_installation(val=True)\"&&python -c \"import teachcompute;teachcompute.check_installation(val=True,verbose=True)\""

[tool.cibuildwheel.macos]
archs = ["x86_64"]
build = "cp*"
skip = "cp36-* cp37-* cp38-* cp39-* cp312-* pypy* pp*"

[tool.cibuildwheel.windows]
archs = ["AMD64"]
build = "cp*"
skip = "cp36-* cp37-* cp38-* cp39-* cp312-* pypy*"

[tool.cython-lint]
max-line-length = 88

[[tool.mypy.overrides]]
module = ["teachcompute.args"]
disable_error_code = ["index"]

[[tool.mypy.overrides]]
module = ["teachcompute.ext_test_case"]
disable_error_code = ["override"]

[[tool.mypy.overrides]]
module = ["teachcompute.datasets.eurostat"]
disable_error_code = ["assignment"]

[[tool.mypy.overrides]]
module = ["teachcompute.fctmr.fast_parallel_fctmr"]
disable_error_code = ["arg-type", "assignment", "attr-defined", "index"]

[tool.mypy]
ignore_missing_imports = true
packages = ["teachcompute"]
exclude = [
    "^_doc/examples",  # skips examples in the documentation
    "^_unittests",  # skips unit tests
    "^build",  # skips build
    "^dist",  # skips dist
    "^teachcompute/torch_models",  # skips torch models
]

[tool.ruff]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".eggs",
    ".git",
    "build",
    "dist",
    "*.ipynb",
]

# Same as Black.
line-length = 88

[tool.ruff.lint]
select = [
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    #"D", # pydocstyle
    "E", # pycodestyle
    "F", # Pyflakes
    "G", # flake8-logging-format
    #"I", # isort
    "ISC", # flake8-implicit-str-concat
    "LOG", # flake8-logging
    #"N", # pep8-naming
    #"NPY", # modern numpy
    #"PERF", # Perflint
    "PIE", # flake8-pie
    "PYI", # flake8-pyi
    "RUF", # Ruff-specific rules
    "SIM", # flake8-simplify
    "SLOT", # flake8-slot
    "T10", # flake8-debugger
    #"TID", # Disallow relative imports
    #"TRY", # flake8-try-except-raise
    #"UP", # pyupgrade
    "W", # pycodestyle
    "YTT", # flake8-2020
]

[tool.ruff.lint.per-file-ignores]
"**" = [
    "C401", "C408", "C413",
    "RUF012", "RUF100", "RUF010",
    "SIM108", "SIM102", "SIM114", "SIM103", "SIM910",
    "UP015", "UP027", "UP031", "UP034", "UP032"
]
"**/plot*.py" = ["B018", "B010"]
"_doc/conf.py" = ["F821", "E501"]
"teachcompute/__init__.py" = ["F401"]
"teachcompute/datasets/__init__.py" = ["F401"]
"teachcompute/fctmr/__init__.py" = ["F401"]
